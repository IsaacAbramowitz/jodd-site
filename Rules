#!/usr/bin/env ruby

require 'compass'
Compass.add_project_configuration 'config.rb'

preprocess do
  # assign a 'site_path' to each item
  @items.each do |item|
    collect_path(item)
  end
end


## just blind-copy these

passthrough '/humans'
passthrough '/robots'
passthrough '/BingSiteAuth'
passthrough '/google*'
passthrough '/y_key_*'

passthrough '/about/*'
passthrough '/fonts/*'
passthrough '/gfx/*'
passthrough '/*.zip'


## static

compile '/static/**/*' do ; end
route '/static/**/*' do
  # /static/foo.html â†’ /foo.html
  item.identifier.to_s.sub(/\A\/static/, '')
end


## partials

# just compile partials and route nothing
compile '/partials/**/*' do
  filter :erb
  filter :kramdown if item[:extension] == 'md'
end
route '/partials/**/*' do ; nil ; end

## sitemap

compile '/sitemap.haml' do
  filter :haml
end
route '/sitemap.haml' do
  item.identifier.without_ext + '.xml'
end

## error pages

compile '/{4,5}0?.md' do
  filter :erb
  filter :kramdown if item[:extension] == 'md'
  layout '/error.html'
end
route '/40?.*' do
  item.identifier.without_ext + '.html'
end
route '/500.md' do
  '/500.php'
end
route '/500.shtml' do
  '/500.shtml'
end

## htaccess

compile '/htaccess.txt' do ; end
route '/htaccess.txt' do
  '/.htaccess'
end

## javascript

compile '/assets/js/**/*' do
end

## CSS

ignore '/assets/css/_*'

compile '/assets/css/**/*' do
  if item[:extension] == 'scss'
    filter :sass, Compass.sass_engine_options.merge(
      :syntax => :scss,
      :style => :compressed
    )
  end
end

route '/assets/css/**/*.css' do
  item.identifier.to_s
end
route '/assets/css/**/*.scss' do
  item.identifier.without_ext + '.css'
end


## defaults

compile '/**/*.md' do
  filter :erb
  filter :kramdown, {
    :smart_quotes => "apos,apos,quot,quot",
    :coderay_line_numbers => nil,
    :coderay_tab_width => 4,
    :coderay_wrap => :div,
    :coderay_css => :class
  }
  #filter :words_filter

  if item[:layout] != nil
    layout item[:layout]
  else
    layout '/default.html'
  end

  filter :add_toc
  filter :jodd_replace
end

route '/**/*.md' do
  path(item)
end


## search

compile '/w_js_meta.haml' do
  filter :haml
end
route '/w_js_meta.haml' do
  '/js/data.json'
end

## the final rule

compile '/**/*' do
  if !item.binary?
    filter :erb
  end
end

route '/**/*' do
  item.identifier.to_s
end

## layouts

layout '/**/*', :erb
