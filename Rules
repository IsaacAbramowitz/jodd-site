#!/usr/bin/env ruby

require 'compass'
Compass.add_project_configuration 'config.rb'

preprocess do
  # assign a 'site_path' to each item
  @items.each do |item|
    collect_path(item)
  end
end


## just blind-copy these

passthrough '/humans'
passthrough '/robots'
passthrough '/BingSiteAuth'
passthrough '/google*'
passthrough '/y_key_*'

passthrough '/about/*'
passthrough '/fonts/*'
passthrough '/gfx/*'
passthrough '/img/*'
passthrough '/*.zip'


## static

compile '/static/sync-filter.txt' do ; end
route '/static/sync-filter.txt' do
  '/.sync-filter.txt'
end


compile '/static/**/*' do ; end
route '/static/**/*' do
  # /static/foo.html â†’ /foo.html
  item.identifier.to_s.sub(/\A\/static/, '')
end


## partials

# just compile partials and route nothing
compile '/partials/**/*' do
  filter :erb
  filter :kramdown if item[:extension] == 'md'
end
route '/partials/**/*' do ; nil ; end

## sitemap

compile '/sitemap.haml' do
  filter :haml
end
route '/sitemap.haml' do
  item.identifier.without_ext + '.xml'
end

## error pages

compile '/{4,5}0?.md' do
  filter :erb
  filter :kramdown if item[:extension] == 'md'
  layout '/error.html'
end
route '/40?.*' do
  item.identifier.without_ext + '.shtml'
end
route '/500.md' do
  '/500.php'
end
route '/500.shtml' do
  '/500.shtml'
end

## mailer

compile '/mailer.php' do ; end
route '/mailer.php' do
  '/mailer.php'
end

## htaccess

compile '/htaccess.txt' do ; end
route '/htaccess.txt' do
  '/.htaccess'
end

## javascript

compile '/js/**/*' do
end

## CSS

ignore '/css/_*'

compile '/css/**/*' do
  if item[:extension] == 'scss'
    filter :sass, Compass.sass_engine_options.merge(
      :syntax => :scss,
      :style => :compressed
    )
  end
end

route '/css/**/*.css' do
  item.identifier.to_s
end
route '/css/**/*.scss' do
  item.identifier.without_ext + '.css'
end


## defaults

compile '/**/*' do
  if !item.binary?
    ext = item[:extension]

    filter :erb
    if ext == 'md'
      filter :kramdown, {
        :smart_quotes => "apos,apos,quot,quot",
        :coderay_line_numbers => nil,
        :coderay_tab_width => 4,
        :coderay_wrap => :div,
        :coderay_css => :class
      }
      filter :words_filter
    end

    if item[:layout] != nil
      layout item[:layout]
    else
      layout '/default.html'
    end

    if [ext == 'md']
      filter :add_toc
      filter :jodd_replace
    end
  end
end

route '/**/*.md' do
  path(item)
end

route '/**/*' do
  item.identifier.to_s
end


## layouts

layout '/**/*', :erb
